# syntax=docker/dockerfile:1.5.2

FROM node:20.2.0-alpine3.17 AS builder
WORKDIR /app
ARG APP

# Install turbo globally
RUN npm install -g turbo

COPY . .

## see https://turbo.build/repo/docs/reference/command-line-reference#turbo-prune---scopetarget
RUN turbo prune --scope=$APP --docker

FROM node:20.2.0-alpine3.17 AS installer
WORKDIR /app
ARG APP

# Install turbo globally
RUN npm install -g turbo

COPY --from=builder /app/out/json/ .
COPY --from=builder /app/out/yarn.lock ./yarn.lock

RUN \
    --mount=type=cache,target=/usr/local/share/.cache/yarn/v6,sharing=locked \
    yarn --prefer-offline --frozen-lockfile

COPY --from=builder /app/out/full/ .
COPY turbo.json turbo.json

## --filter=frontend^... means all of frontend's dependencies will be built, but not the frontend app itself (which we don't need to do for dev environment)
RUN turbo run build --no-cache --filter=${APP}^...

# re-running yarn is necessary to catch changes to deps between workspaces
RUN \
    --mount=type=cache,target=/usr/local/share/.cache/yarn/v6,sharing=locked \
    yarn --prefer-offline --frozen-lockfile

FROM node:20.2.0-alpine3.17 AS runner
WORKDIR /app
ARG APP
ARG START_COMMAND=dev

COPY --from=installer /app .

CMD yarn workspace ${APP} ${START_COMMAND}
